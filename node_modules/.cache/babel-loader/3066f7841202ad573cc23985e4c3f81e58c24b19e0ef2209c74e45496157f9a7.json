{"ast":null,"code":"// import { useEffect, useState } from \"react\";\n\n// const HeaderEvent = () => {\n//     const [screenSize, setScreenSize] = useState(window.innerWidth);\n//     const [isMobile, setIsMobile] = useState(window.matchMedia(\"(max-width: 1024px)\").matches);\n\n//     const updateScreenSize = () => {\n//         setScreenSize(window.innerWidth);\n//         setIsMobile(window.matchMedia(\"(max-width: 1024px)\").matches);\n//     };\n\n//     const mouseEvent = (e, action) => {\n//         const target = e.currentTarget;\n//         const depth2 = target.querySelector('.depth2');\n\n//         if (screenSize > 1024 && !isMobile && depth2) {\n//             // PC일 때\n//             depth2.classList.toggle('on', action === 'add');\n//             depth2.style.maxHeight = action === 'add' ? `${depth2.scrollHeight}px` : '0';\n//         }\n//     };\n\n//     const clickEvent = (e) => {\n//         const target = e.currentTarget;\n//         const depth2Elements = document.querySelectorAll('.depth2');\n\n//         if (screenSize <= 1024 && isMobile && depth2Elements) {\n//             // Mobile일 때\n//             depth2Elements.forEach((depth2) => {\n//                 depth2.classList.remove('on');\n//             });\n\n//             const depth2 = target.querySelector('.depth2');\n//             if (depth2) {\n//                 depth2.classList.toggle('on');\n//             }\n//         }\n//     };\n\n//     useEffect(() => {\n//         const navLinks = document.querySelectorAll(\"#gnb > li\");\n\n//         const addEventListeners = () => {\n//             navLinks.forEach((link) => {\n//                 if (!isMobile) {\n//                     link.addEventListener(\"mouseenter\", (e) => mouseEvent(e, 'add'));\n//                     link.addEventListener(\"mouseleave\", (e) => mouseEvent(e, 'remove'));\n//                 }\n\n//                 link.addEventListener(\"click\", clickEvent);\n//             });\n//         };\n\n//         const removeEventListeners = () => {\n//             navLinks.forEach((link) => {\n//                 if (!isMobile) {\n//                     link.removeEventListener(\"mouseenter\", (e) => mouseEvent(e, 'add'));\n//                     link.removeEventListener(\"mouseleave\", (e) => mouseEvent(e, 'remove'));\n//                 }\n\n//                 link.removeEventListener(\"click\", clickEvent);\n//             });\n//         };\n\n//         addEventListeners();\n\n//         window.addEventListener('resize', updateScreenSize);\n\n//         return () => {\n//             removeEventListeners();\n//             window.removeEventListener('resize', updateScreenSize);\n//         };\n//     }, [isMobile]);\n\n//     useEffect(() => {\n//         const navLinks = document.querySelectorAll(\"#gnb > li\");\n\n//         const addEventListeners = () => {\n//             navLinks.forEach((link) => {\n//                 if (!isMobile) {\n//                     link.addEventListener(\"mouseenter\", (e) => mouseEvent(e, 'add'));\n//                     link.addEventListener(\"mouseleave\", (e) => mouseEvent(e, 'remove'));\n//                 }\n//                 link.addEventListener(\"click\", clickEvent);\n//             });\n//         };\n\n//         const removeEventListeners = () => {\n//             navLinks.forEach((link) => {\n//                 if (!isMobile) {\n//                     link.removeEventListener(\"mouseenter\", (e) => mouseEvent(e, 'add'));\n//                     link.removeEventListener(\"mouseleave\", (e) => mouseEvent(e, 'remove'));\n//                 }\n//                 link.removeEventListener(\"click\", clickEvent);\n//             });\n//         };\n\n//         // 이벤트 리스너 재설정\n//         removeEventListeners();\n//         addEventListeners();\n//     }, [isMobile]);\n\n//     return null;\n// };\n\n// export default HeaderEvent;","map":{"version":3,"names":[],"sources":["C:/Users/skswk/Desktop/project_1/src/common/header/HeaderEvent.js"],"sourcesContent":["// import { useEffect, useState } from \"react\";\r\n\r\n// const HeaderEvent = () => {\r\n//     const [screenSize, setScreenSize] = useState(window.innerWidth);\r\n//     const [isMobile, setIsMobile] = useState(window.matchMedia(\"(max-width: 1024px)\").matches);\r\n\r\n//     const updateScreenSize = () => {\r\n//         setScreenSize(window.innerWidth);\r\n//         setIsMobile(window.matchMedia(\"(max-width: 1024px)\").matches);\r\n//     };\r\n\r\n//     const mouseEvent = (e, action) => {\r\n//         const target = e.currentTarget;\r\n//         const depth2 = target.querySelector('.depth2');\r\n\r\n//         if (screenSize > 1024 && !isMobile && depth2) {\r\n//             // PC일 때\r\n//             depth2.classList.toggle('on', action === 'add');\r\n//             depth2.style.maxHeight = action === 'add' ? `${depth2.scrollHeight}px` : '0';\r\n//         }\r\n//     };\r\n\r\n//     const clickEvent = (e) => {\r\n//         const target = e.currentTarget;\r\n//         const depth2Elements = document.querySelectorAll('.depth2');\r\n\r\n//         if (screenSize <= 1024 && isMobile && depth2Elements) {\r\n//             // Mobile일 때\r\n//             depth2Elements.forEach((depth2) => {\r\n//                 depth2.classList.remove('on');\r\n//             });\r\n\r\n//             const depth2 = target.querySelector('.depth2');\r\n//             if (depth2) {\r\n//                 depth2.classList.toggle('on');\r\n//             }\r\n//         }\r\n//     };\r\n\r\n//     useEffect(() => {\r\n//         const navLinks = document.querySelectorAll(\"#gnb > li\");\r\n\r\n//         const addEventListeners = () => {\r\n//             navLinks.forEach((link) => {\r\n//                 if (!isMobile) {\r\n//                     link.addEventListener(\"mouseenter\", (e) => mouseEvent(e, 'add'));\r\n//                     link.addEventListener(\"mouseleave\", (e) => mouseEvent(e, 'remove'));\r\n//                 }\r\n\r\n//                 link.addEventListener(\"click\", clickEvent);\r\n//             });\r\n//         };\r\n\r\n//         const removeEventListeners = () => {\r\n//             navLinks.forEach((link) => {\r\n//                 if (!isMobile) {\r\n//                     link.removeEventListener(\"mouseenter\", (e) => mouseEvent(e, 'add'));\r\n//                     link.removeEventListener(\"mouseleave\", (e) => mouseEvent(e, 'remove'));\r\n//                 }\r\n\r\n//                 link.removeEventListener(\"click\", clickEvent);\r\n//             });\r\n//         };\r\n\r\n//         addEventListeners();\r\n\r\n//         window.addEventListener('resize', updateScreenSize);\r\n\r\n//         return () => {\r\n//             removeEventListeners();\r\n//             window.removeEventListener('resize', updateScreenSize);\r\n//         };\r\n//     }, [isMobile]);\r\n\r\n//     useEffect(() => {\r\n//         const navLinks = document.querySelectorAll(\"#gnb > li\");\r\n\r\n//         const addEventListeners = () => {\r\n//             navLinks.forEach((link) => {\r\n//                 if (!isMobile) {\r\n//                     link.addEventListener(\"mouseenter\", (e) => mouseEvent(e, 'add'));\r\n//                     link.addEventListener(\"mouseleave\", (e) => mouseEvent(e, 'remove'));\r\n//                 }\r\n//                 link.addEventListener(\"click\", clickEvent);\r\n//             });\r\n//         };\r\n\r\n//         const removeEventListeners = () => {\r\n//             navLinks.forEach((link) => {\r\n//                 if (!isMobile) {\r\n//                     link.removeEventListener(\"mouseenter\", (e) => mouseEvent(e, 'add'));\r\n//                     link.removeEventListener(\"mouseleave\", (e) => mouseEvent(e, 'remove'));\r\n//                 }\r\n//                 link.removeEventListener(\"click\", clickEvent);\r\n//             });\r\n//         };\r\n\r\n//         // 이벤트 리스너 재설정\r\n//         removeEventListeners();\r\n//         addEventListeners();\r\n//     }, [isMobile]);\r\n\r\n//     return null;\r\n// };\r\n\r\n// export default HeaderEvent;\r\n"],"mappings":"AAAA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}